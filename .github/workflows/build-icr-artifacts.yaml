name: Build ICR CLI Artifacts

on:
  workflow_dispatch:
    inputs:
      build_label:
        description: 'Build label (e.g., dev-build, test-build)'
        required: true
        type: string

env:
  BUILD_LABEL: ${{ github.event.inputs.build_label }}

jobs:
  build-artifacts:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.0

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build binary
        working-directory: typescript/icr-cli
        run: |
          # First install locally in a folder to make sure it works
          pnpm install
          # Check the code works
          pnpm run create-user
          # Build the app
          pnpm run build
          node dist/index.js --version
          # INSERT_YOUR_CODE
          exit 1
          pnpm run build-binary-debug

      - name: List built binaries
        working-directory: typescript/icr-cli
        run: ls -la dist/bin/

      - name: Rename binaries to include build label
        working-directory: typescript/icr-cli
        run: |
          for file in dist/bin/*; do
            [ -f "$file" ] || continue
            base=$(basename "$file")
            baseName="${base%.*}"
            extension="${base##*.}"
            
            # If extension is the same as base, there's no extension
            if [ "$extension" = "$base" ]; then
              extension=""
              mv "$file" "dist/bin/${baseName}-${{ env.BUILD_LABEL }}"
            else
              mv "$file" "dist/bin/${baseName}-${{ env.BUILD_LABEL }}.${extension}"
            fi
          done

      - name: Upload binaries as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: icr-cli-binaries-${{ env.BUILD_LABEL }}-${{ github.run_number }}
          path: typescript/icr-cli/dist/bin/*
          retention-days: 90

      - name: Output artifact information
        run: |
          echo "## Build Complete!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Build Label:** ${{ env.BUILD_LABEL }}" >> $GITHUB_STEP_SUMMARY
          echo "**Run Number:** ${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Artifacts:**" >> $GITHUB_STEP_SUMMARY
          echo "- Name: icr-cli-binaries-${{ env.BUILD_LABEL }}-${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
          echo "- Retention: 90 days" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Download artifacts from the Actions tab or use the workflow run URL:" >> $GITHUB_STEP_SUMMARY
          echo "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_STEP_SUMMARY
