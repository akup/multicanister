name: Build and Deploy IC canisters

on:
  push:
    branches: [ main, dev-* ]
    paths:
      - 'typescript/**'
      - '.github/workflows/build-and-deploy-wasms.yaml'
  pull_request:
    branches: [ main ]
    paths:
      - 'typescript/**'
      - '.github/workflows/build-and-deploy-wasms.yaml'
  workflow_dispatch:
    inputs:
      application:
        description: 'Application to deploy (leave empty for all)'
        required: false
        type: string
        default: ''
        options:
          - pocket-ic-core
          - test-app

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Get release info
        id: release
        run: |
          # Get latest release info
          RELEASE_INFO=$(gh api repos/${{ github.repository }}/releases/latest)
          RELEASE_ID=$(echo "$RELEASE_INFO" | jq -r '.id')
          RELEASE_TAG=$(echo "$RELEASE_INFO" | jq -r '.tag_name')
          RELEASE_SHA=$(echo "$RELEASE_INFO" | jq -r '.target_commitish')
          
          echo "release_id=$RELEASE_ID" >> $GITHUB_OUTPUT
          echo "release_tag=$RELEASE_TAG" >> $GITHUB_OUTPUT
          echo "release_sha=$RELEASE_SHA" >> $GITHUB_OUTPUT
          
          echo "Latest release: $RELEASE_TAG (SHA: $RELEASE_SHA)"

      - name: Download ICR CLI or use cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.local/bin
            icr-cli-cache
          key: icr-cli-${{ steps.release.outputs.release_tag }}
          restore-keys: |
            icr-cli-

      - name: Download ICR CLI if not cached
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p ~/.local/bin
          cd ~/.local/bin
          
          # Download the specific release
          wget -O icr-cli "https://github.com/JJOInvest/dex-multicanister/releases/download/${{ steps.release.outputs.release_tag }}/icr-cli-linux
          
          # Make it executable
          chmod +x â‰ˆ
          
          # Verify download
          ./icr-cli --version || echo "ICR CLI downloaded successfully"
          
          # Cache the downloaded binary
          echo "ICR CLI cached for future use"

      - name: Run icr-cli
        shell: bash
        run: |
          icr-cli --version
          icr-cli --help

      # - name: Setup pnpm cache
      #   uses: actions/cache@v4
      #   with:
      #     path: ${{ env.STORE_PATH }}
      #     key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
      #     restore-keys: |
      #       ${{ runner.os }}-pnpm-store-