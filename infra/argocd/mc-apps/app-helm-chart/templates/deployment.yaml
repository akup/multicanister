{{- $fullName := include "fullname" . -}}
{{- if .Values.statefulSet.enabled }}
apiVersion: apps/v1
kind: StatefulSet
{{- else }}
apiVersion: apps/v1
kind: Deployment
{{- end }}
metadata:
  name: {{ include "fullname" . }}
  labels:
    {{- include "labels" . | nindent 4 }}
spec:
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  {{- if .Values.statefulSet.enabled }}
  serviceName: {{ include "fullname" . }}
  podManagementPolicy: {{ .Values.statefulSet.podManagementPolicy | default "OrderedReady" }}
  {{- else }}
  strategy:
  {{- with .Values.updateStrategy }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- end }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ randAlphaNum 10 | sha256sum }}
      {{- if (and .Values.global (default false .Values.global.alwaysRedeploy)) }}
        rollme: {{ randAlphaNum 10 | quote }}
      {{- end }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      hostAliases:
      {{- with .Values.hostAliases }}
        {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- if .Values.setupType }}
      hostname: {{ .Values.setupType | quote }}
      {{- end }}
      serviceAccountName: {{ include "fullname" . }}
      terminationGracePeriodSeconds: {{ (default 30 .Values.global.terminationGracePeriodSeconds) }}
      shareProcessNamespace: {{ (default false .Values.global.shareProcessNamespace) }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- range . }}
        - name: {{ tpl .name $ | quote }}
        {{- end }}
      {{- end }}
      {{- if .Values.initContainer.enabled }}
      initContainers:
      - name: {{ .Values.initContainer.name }}
        image: "{{ .Values.initContainer.image.repository }}:{{ .Values.initContainer.image.tag }}"
        imagePullPolicy: {{ .Values.initContainer.image.pullPolicy }}
        {{- if .Values.initContainer.env_vars }}
        envFrom:
          - secretRef:
              name: {{ include "fullname" . }}-init-environments
        {{- end }}
      {{- end }}
      containers:
        - name: {{ include "fullname" . }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if (and .Values.customLaunch (default false .Values.customLaunch.enabled)) }}
          {{- if (and .Values.customLaunch .Values.customLaunch.command) }}
          command: {{ .Values.customLaunch.command }}
          {{- end }}
          {{- if (and .Values.customLaunch .Values.customLaunch.args) }}
          args: {{ .Values.customLaunch.args }}
          {{- end }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
{{- if .Values.env_vars }}
          envFrom:
            - secretRef:
                name: {{ include "fullname" . }}-environments
{{- end }}
{{- if .Values.service }}
          ports:
{{- range $key, $val := .Values.service.ports }}
          - name: {{ $key }}
            containerPort: {{ $val.pod_port }}
            protocol: {{ $val.protocol }}
{{- end }}
{{- end }}

{{- if or (.Values.persistence.enabled) (.Values.secrets.enabled) }}
          volumeMounts:
{{- if .Values.secrets.enabled }}
{{- range $key, $value := .Values.secrets.secretsList }}
          - name: "secret-{{ $fullName }}-{{ $key }}"
            readOnly: {{ .readOnly }}
            mountPath: "{{ .mountPath }}/{{ .fileName }}"
            subPath: {{ .fileName }}
{{- end }}
{{- end }}
{{- if (and .Values.persistence (and .Values.persistence.pvc (default false .Values.persistence.enabled))) }}
{{- range $key, $value := .Values.persistence.pvc.pvcList }}
          - name: "{{ $fullName }}-{{ $key }}"
            readOnly: {{ .readOnly }}
            mountPath: {{ .mountPath }}
{{- end }}
{{- end }}
{{- end }}

{{- if .Values.probes }}
{{ toYaml .Values.probes | indent 10 }}
{{- end }}

{{- if or (.Values.secrets.enabled) (and .Values.persistence (and .Values.persistence.pvc (default false .Values.persistence.enabled)) (not .Values.statefulSet.enabled)) }}
      volumes:
{{- if .Values.secrets.enabled }}
{{- range $key, $value := .Values.secrets.secretsList }}
        - name: "secret-{{ $fullName }}-{{ $key }}"
          secret:
            secretName: "{{ $fullName }}-{{ $key }}"
{{- end }}
{{- end }}
{{- if (and .Values.persistence (and .Values.persistence.pvc (default false .Values.persistence.enabled)) (not .Values.statefulSet.enabled)) }}
{{- range $key, $value := .Values.persistence.pvc.pvcList }}
        - name: "{{ $fullName }}-{{ $key }}"
          persistentVolumeClaim:
            claimName: "pvc-{{ $fullName }}-{{ $key }}"
{{- end }}
{{- end }}
{{- end }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- if .Values.statefulSet.enabled }}
  {{- if (and .Values.persistence (and .Values.persistence.pvc (default false .Values.persistence.enabled))) }}
  volumeClaimTemplates:
{{- range $key, $value := .Values.persistence.pvc.pvcList }}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: "{{ $fullName }}-{{ $key }}"
    spec:
      accessModes:
        - {{ .accessMode }}
      storageClassName: {{ .storageClassName }}
      resources:
        requests:
          storage: {{ .size }}
{{- end }}
  {{- end }}
{{- end }}
