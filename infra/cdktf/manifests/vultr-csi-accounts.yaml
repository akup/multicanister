## Service Accounts
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-vultr-controller-sa
  namespace: kube-system

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-vultr-node-sa
  namespace: kube-system


## Attacher Role + Binding
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: csi-vultr-attacher-role
  namespace: kube-system
rules:
  - apiGroups: [ "" ]
    resources: [ "persistentvolumes" ]
    verbs: [ "get", "list", "watch", "update", "patch" ]
  - apiGroups: [ "" ]
    resources: [ "nodes" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "storage.k8s.io" ]
    resources: [ "csinodes" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "storage.k8s.io" ]
    resources: [ "volumeattachments" ]
    verbs: [ "get", "list", "watch", "update", "patch" ]
  - apiGroups: [ "storage.k8s.io" ]
    resources: [ "volumeattachments/status" ]
    verbs: [ "patch" ]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-controller-attacher-binding
  namespace: kube-system
subjects:
  - kind: ServiceAccount
    name: csi-vultr-controller-sa
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: csi-vultr-attacher-role
  apiGroup: rbac.authorization.k8s.io


## Provisioner Role + Binding
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-vultr-provisioner-role
  namespace: kube-system
rules:
  - apiGroups: [ "" ]
    resources: [ "secrets" ]
    verbs: [ "get", "list" ]
  - apiGroups: [ "" ]
    resources: [ "persistentvolumes" ]
    verbs: [ "get", "list", "watch", "create", "delete" ]
  - apiGroups: [ "" ]
    resources: [ "persistentvolumeclaims" ]
    verbs: [ "get", "list", "watch", "update" ]
  - apiGroups: [ "storage.k8s.io" ]
    resources: [ "storageclasses" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "storage.k8s.io" ]
    resources: [ "csinodes" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "" ]
    resources: [ "events" ]
    verbs: [ "list", "watch", "create", "update", "patch" ]
  - apiGroups: [ "" ]
    resources: [ "nodes" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "storage.k8s.io" ]
    resources: [ "volumeattachments" ]
    verbs: [ "get", "list", "watch" ]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-controller-provisioner-binding
  namespace: kube-system
subjects:
  - kind: ServiceAccount
    name: csi-vultr-controller-sa
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: csi-vultr-provisioner-role
  apiGroup: rbac.authorization.k8s.io


## Resizer Role + Binding
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-vultr-resizer-role
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims/status"]
    verbs: ["update", "patch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-vultr-resizer-binding
subjects:
  - kind: ServiceAccount
    name: csi-vultr-controller-sa
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: csi-vultr-resizer-role
  apiGroup: rbac.authorization.k8s.io


## Node Driver Registrar Role + Binding
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-vultr-node-driver-registrar-role
  namespace: kube-system
rules:
  - apiGroups: [ "" ]
    resources: [ "events" ]
    verbs: [ "get", "list", "watch", "create", "update", "patch" ]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: driver-registrar-binding
  namespace: kube-system
subjects:
  - kind: ServiceAccount
    name: csi-vultr-node-sa
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: csi-vultr-node-driver-registrar-role
  apiGroup: rbac.authorization.k8s.io